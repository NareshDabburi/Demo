
import java.awt.Button;
import java.awt.Choice;
import java.awt.Label;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

import javax.naming.spi.DirStateFactory.Result;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class UI {
	static TextField text1,text2,text3,text4,text5;
	static String INI_path;
	static Choice choice=new Choice();
    static JFrame frame= new JFrame();
    static String Source_path,Destination_path,Result_path,OTCompare_Path;
	public static void main(String[] args)throws IOException {
		
		frame=new JFrame("Choose Your Title");
		
		//Look and Feel
		try {
			UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
			//UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
			//UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException
				| UnsupportedLookAndFeelException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		
		Label label1,label2,label3,label4,label5;
		
		//Create labels
		label1=new Label("Reference File");
		label2=new Label("Compared File");
		label3=new Label("Result File Location");
		label4=new Label("Bat File Location");
		label5=new Label("Choose INI File Location");
		//Set Label Placement
		label1.setBounds(20,50,150,30);
		label2.setBounds(20, 100, 150, 30);
		label3.setBounds(20, 150, 150, 30);
		label4.setBounds(20, 200, 150, 30);
		label5.setBounds(20, 250, 150, 30);
		//Add Label to frame
		frame.add(label1);
		frame.add(label2);
		frame.add(label3);
		frame.add(label4);
		frame.add(label5);
		
		
		
		//Initialise text feilds
		 text1=new TextField("");
		 text2=new TextField("");
		 text3=new TextField("");
		 text4=new TextField("");
		 text5=new TextField("");
		//Set TextFeild Placement
		text1.setBounds(180,50,330,30);
		text2.setBounds(180,100,330,30);
		text3.setBounds(180,150,330,30);
		text4.setBounds(180,200,330,30);
		text5.setBounds(180,250,330,30);
		//add text files to Frame
		frame.add(text1);
		frame.add(text2);
		frame.add(text3);
		frame.add(text4);
		frame.add(text5);
		 
		//Create Buttons
		Button button_1=new Button("Browse File");
		Button button_2=new Button("Browse File");
		Button button_3=new Button("Browse File");
		Button button_4=new Button("Browse File");
		Button button_5=new Button("Browse File");
		Button button_Start=new Button("Start");
		Button button_Exit=new Button("Exit");
		//Set Button Placement
		button_1.setBounds(550,50,80,30);
		button_2.setBounds(550,100,80,30);
		button_3.setBounds(550,150,80,30);
		button_4.setBounds(550,200,80,30);
		button_5.setBounds(550,250,80,30);
		button_Start.setBounds(180,350,60,30);
		button_Exit.setBounds(270,350,60,30);
		
		//add buttons to Frame
		frame.add(button_1);
		frame.add(button_2);
		frame.add(button_3);
		frame.add(button_4);
		frame.add(button_5);
		frame.add(button_Start);
		frame.add(button_Exit);
		
		
		
		choice.setBounds(180,300,200,30);
		
		
		
		
		//Java Action Listener
		 button_1.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	JFileChooser chooser = new JFileChooser();
			    	chooser.setCurrentDirectory(new java.io.File("."));
		        	chooser.setDialogTitle("choosertitle");
		        	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		        	chooser.setAcceptAllFileFilterUsed(false);
		        	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
		        		text1.setText(chooser.getSelectedFile().getPath());
		        		Source_path=chooser.getSelectedFile().getPath();
		        	}  
			    }  
			    });
		 button_2.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	JFileChooser chooser = new JFileChooser();
			    	chooser.setCurrentDirectory(new java.io.File("."));
		        	chooser.setDialogTitle("choosertitle");
		        	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		        	chooser.setAcceptAllFileFilterUsed(false);
		        	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
		        		text2.setText(chooser.getSelectedFile().getPath());
		        		Destination_path=chooser.getSelectedFile().getPath();
		        	} 
			    }  
			    });
		 button_3.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	JFileChooser chooser = new JFileChooser();
			    	chooser.setCurrentDirectory(new java.io.File("."));
		        	chooser.setDialogTitle("choosertitle");
		        	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		        	chooser.setAcceptAllFileFilterUsed(false);
		        	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
		        		text3.setText(chooser.getSelectedFile().getPath());
		        		Result_path=chooser.getSelectedFile().getPath();
		        	}  
			    }  
			    });
		 button_4.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	JFileChooser chooser = new JFileChooser();
			    	chooser.setCurrentDirectory(new java.io.File("."));
		        	chooser.setDialogTitle("choosertitle");
		        	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		        	chooser.setAcceptAllFileFilterUsed(false);
		        	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
		        		text4.setText(chooser.getSelectedFile().getPath());
		        		OTCompare_Path=chooser.getSelectedFile().getPath();
		        	}  
			    }  
			    });
		 button_5.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){ 
			    	buttonActionPerformed(e,choice);
			    } 
			    });
		 button_Start.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){ 
			    	Functional_class.func(Source_path, Destination_path, Result_path, OTCompare_Path);
			    	System.out.println(Source_path);
			    	System.out.println(Destination_path);
			    	System.out.println(Result_path);
			    }  
			    });


		 button_Exit.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	System.exit(0);
			    }  
			    });

		//Set Dimension of frame
		frame.setSize(700,450);
		frame.setLocationRelativeTo(null);
		frame.setLayout(null);
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
    public static void buttonActionPerformed(ActionEvent evt,Choice choice) {
    	JFileChooser chooser = new JFileChooser();
    	chooser.setCurrentDirectory(new java.io.File("."));
    	chooser.setDialogTitle("choosertitle");
    	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    	chooser.setAcceptAllFileFilterUsed(false);
    	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
    		choice.removeAll();
    		text5.setText(chooser.getSelectedFile().getPath());
    		INI_path=chooser.getSelectedFile().getPath();
    		Display_ListOfFiles(INI_path);
    	} 
    }
    public static void Display_ListOfFiles(String INI_path) {
    	File[] INIFiles = new File(INI_path).listFiles();
    	choice.add("Select");
    	for(File source:INIFiles) {
    		choice.add(source.getName());
    	}
    	//choice.setMultipleMode(true);
    	frame.add(choice);
    }  
}
