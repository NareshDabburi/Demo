package com.main;

import java.awt.Button;
import java.awt.Choice;
import java.awt.Label;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.prefs.Preferences;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class UI_class {
	static JTextArea INI_textArea=new JTextArea();
	static JScrollPane jsp=new JScrollPane(INI_textArea);
    static ArrayList<String> al_INI_absPath=new ArrayList<String>();
	static JTextField text1,text2,text3,text4,text5;
	static String INI_path;
	static Choice choice=new Choice();
    static JFrame frame= new JFrame();
    static String Source_path,Destination_path,Result_path,OTCompare_Path;
	public static void main(String[] args)throws IOException {
		
		frame=new JFrame("UTILITY");
		
		//Look and Feel
		try {
			UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
			//UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
			//UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException
				| UnsupportedLookAndFeelException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		
		Label label1,label2,label3,label4,label5;
		
		//Create labels
		label1=new Label("Reference File");
		label2=new Label("Compared File");
		label3=new Label("Result File Location");
		label4=new Label("Bat File Location");
		label5=new Label("Choose INI File Location");
		//Set Label Placement
		label1.setBounds(20,50,150,30);
		label2.setBounds(20, 100, 150, 30);
		label3.setBounds(20, 150, 150, 30);
		label4.setBounds(20, 200, 150, 30);
		label5.setBounds(20, 250, 150, 30);
		//Add Label to frame
		frame.add(label1);
		frame.add(label2);
		frame.add(label3);
		frame.add(label4);
		frame.add(label5);
		
		
		
		//Initialise text feilds
		 text1=new JTextField("");
		 text2=new JTextField("");
		 text3=new JTextField("");
		 text4=new JTextField("");
		 text5=new JTextField("");
		 
		//Set TextFeild Placement
		text1.setBounds(180,50,330,30);
		text2.setBounds(180,100,330,30);
		text3.setBounds(180,150,330,30);
		text4.setBounds(180,200,330,30);
		text5.setBounds(180,250,330,30);
		
		//add text files to Frame
		frame.add(text1);
		frame.add(text2);
		frame.add(text3);
		frame.add(text4);
		frame.add(text5);
		
		//Create Buttons
		Button button_1=new Button("Browse File");
		Button button_2=new Button("Browse File");
		Button button_3=new Button("Browse File");
		Button button_4=new Button("Browse File");
		Button button_5=new Button("Browse File");
		Button button_Start=new Button("Start");
		Button button_Reset=new Button("Reset");
		Button button_Exit=new Button("Exit");
		
		//Set Button Placement
		button_1.setBounds(550,50,80,30);
		button_2.setBounds(550,100,80,30);
		button_3.setBounds(550,150,80,30);
		button_4.setBounds(550,200,80,30);
		button_5.setBounds(550,250,80,30);
		button_Start.setBounds(180,400,60,30);
		button_Reset.setBounds(280,400,60,30);
		button_Exit.setBounds(380,400,60,30);
		
		//add buttons to Frame
		frame.add(button_1);
		frame.add(button_2);
		frame.add(button_3);
		frame.add(button_4);
		frame.add(button_5);
		frame.add(button_Start);
		frame.add(button_Reset);
		frame.add(button_Exit);
		
		
		
		choice.setBounds(180,300,200,30);
		jsp.setBounds(400,300,250,80);
		
		
		//Java Action Listener
		 button_1.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	JFileChooser chooser = new JFileChooser();
			    	chooser.setCurrentDirectory(new java.io.File("."));
		        	chooser.setDialogTitle("choosertitle");
		        	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		        	chooser.setAcceptAllFileFilterUsed(false);
		        	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
		        		text1.setText(chooser.getSelectedFile().getPath());
		        		//Source_path=chooser.getSelectedFile().getPath();
		        		Source_path=text1.getText();
		        	}  
			    }  
			    });
		 String LAST_USED_FOLDER=Source_path;
		 button_2.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	
			    	JFileChooser chooser = new JFileChooser();
			    	chooser.setCurrentDirectory(new java.io.File("."));
		        	chooser.setDialogTitle("choosertitle");
		        	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		        	chooser.setAcceptAllFileFilterUsed(false);
		        	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
		        		text2.setText(chooser.getSelectedFile().getPath());
		        		//Destination_path=chooser.getSelectedFile().getPath();
		        		Destination_path=text2.getText();
		        	} 
			    }  
			    });
		 button_3.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	JFileChooser chooser = new JFileChooser();
			    	chooser.setCurrentDirectory(new java.io.File("."));
		        	chooser.setDialogTitle("choosertitle");
		        	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		        	chooser.setAcceptAllFileFilterUsed(false);
		        	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
		        		text3.setText(chooser.getSelectedFile().getPath());
		        		//Result_path=chooser.getSelectedFile().getPath();
		        		Result_path=text3.getText();
		        	}  
			    }  
			    });
		 button_4.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	JFileChooser chooser = new JFileChooser();
			    	chooser.setCurrentDirectory(new java.io.File("."));
		        	chooser.setDialogTitle("choosertitle");
		        	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		        	chooser.setAcceptAllFileFilterUsed(false);
		        	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
		        		text4.setText(chooser.getSelectedFile().getPath());
		        		//OTCompare_Path=chooser.getSelectedFile().getPath();
		        		OTCompare_Path=text4.getText();
		        	}  
			    }  
			    });
		 button_5.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){ 
			    	buttonActionPerformed(e,choice);
			    } 
			    });
		 
		 
		 
		 button_Start.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){ 
			    	
			    	if(text1.getText().isEmpty()||text2.getText().isEmpty()||text3.getText().isEmpty()||text4.getText().isEmpty()) {
			    		JOptionPane.showMessageDialog(null, "First four feilds are mandatory", 
					            "Mandatory", JOptionPane.CLOSED_OPTION);
			    		
			    	}else {
			    		Functional_class.func(Source_path, Destination_path, Result_path, OTCompare_Path,al_INI_absPath);
			    		//System.out.println("Working");	
			    	}
			    	//System.out.println(Source_path);
			    	//System.out.println(Destination_path);
			    	//System.out.println(Result_path);
			    	System.out.print("Your Bat file is generated");
			    	
			    }  
			    });
		 button_Reset.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	text1.setText("");
			    	text2.setText("");
			    	text3.setText("");
			    	text4.setText("");
			    	text5.setText("");
			    	choice.disable();
			    	al_INI_absPath.clear();
			    	INI_textArea.setText(null);
			    	choice.removeAll();
			    }  
			    });
		 


		 button_Exit.addActionListener(new ActionListener(){  
			    public void actionPerformed(ActionEvent e){  
			    	System.exit(0);
			    }  
			    });
		 
		// t1=new JTextArea(10,20);
		// t1.setBounds(400,300,250,70);
		 
		    
		 
		 choice.addItemListener(new ItemListener(){	 
		        public void itemStateChanged(ItemEvent ie)
		        {
		        	if(choice.getSelectedItem()!="Select") {
		        		INI_textArea.append(choice.getSelectedItem()+"\n");
		        	al_INI_absPath.add(INI_path+"\\"+choice.getSelectedItem());
		        	System.out.println(al_INI_absPath);
		        System.out.println("You selected "+choice.getSelectedItem());}
		        }
		    });
		 
	
		//Set Dimension of frame
		frame.setSize(700,500);
		frame.setLocationRelativeTo(null);
		frame.setLayout(null);
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
    public static void buttonActionPerformed(ActionEvent evt,Choice choice) {
    	JFileChooser chooser = new JFileChooser();
    	chooser.setCurrentDirectory(new java.io.File("."));
    	chooser.setDialogTitle("choosertitle");
    	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    	chooser.setAcceptAllFileFilterUsed(false);
    	if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
    		choice.enable();
    		al_INI_absPath.clear();
    		choice.removeAll();
    		INI_textArea.setText("");
    		text5.setText(chooser.getSelectedFile().getPath());
    		INI_path=chooser.getSelectedFile().getPath();
    		Display_ListOfINIFiles(INI_path);
    	} 
    }
    public static void Display_ListOfINIFiles(String INI_path) {
    	File[] INIFiles = new File(INI_path).listFiles();
    	
    	frame.add(jsp);
    	choice.add("Select");
    	for(File source:INIFiles) {   		
    		choice.add(source.getName());
    	}
    	System.out.println(al_INI_absPath);
    	System.out.println("Reset");
    	//choice.setMultipleMode(true);
    	frame.add(choice);
    }
}
